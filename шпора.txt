itertools.product([1, 2, 3], repeat=4)
sys.setrecursionlimit(10000)
Math.floor
Math.round
Math.ceil

import string
string.ascii_lowercase

def convert_base(num, to_base=10, from_base=10):
    # first convert to decimal number
    if isinstance(num, str):
        n = int(num, from_base)
    else:
        n = int(num)
    alphabet = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"
    if n < to_base:
        return alphabet[n]
    else:
        return convert_base(n // to_base, to_base) + alphabet[n % to_base]


def moves(h):
    a, b = h
    return (a + 2, b), (a, b + 2), (a * 2, b), (a, b * 2)

@lru_cache(None)
def f(h):
    if (sum(h) >= 142):
        return "END" 
    elif (any(f(x) == "END" for x in moves(h))):
        return "П1"
    elif (all(f(x) == "П1" for x in moves(h))):
        return "В1"
    elif (any(f(x) == "В1" for x in moves(h))):
        return "П2"
    elif (all(f(x) == "П2" or f(x) == "П1" for x in moves(h))):
        return "В2"

for i in range(1, 100):
    h = 2, i 
    print(i, f(h))